load("//chromium:build_defs.bzl", "chromium_cc_library", "chromium_cc_test", "chromium_objc_library")

chromium_objc_library(
    name = "bridging",
    hdrs = ["bridging.h"],
    target_compatible_with = select({
        "@platforms//os:macos": [],
        "@platforms//os:ios": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        ":scoped_cftyperef",
        "//chromium/base:base_export",
        "//chromium/base:check",
        "//chromium/base/types:always_false",
        "//chromium/build:build_config",
    ],
)

chromium_objc_library(
    name = "mach_logging",
    hdrs = ["mach_logging.h"],
    target_compatible_with = select({
        "@platforms//os:macos": [],
        "@platforms//os:ios": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//chromium/base/strings:stringprintf",
        "@abseil-cpp//absl/log:absl_check",
        "@abseil-cpp//absl/log:absl_log",
    ],
)

chromium_cc_library(
    name = "scoped_cftyperef",
    hdrs = ["scoped_cftyperef.h"],
    linkopts = select({
        "@platforms//os:macos": ["-Wl,-framework,CoreFoundation"],
        "@platforms//os:ios": ["-Wl,-framework,CoreFoundation"],
        "//conditions:default": [],
    }),
    target_compatible_with = select({
        "@platforms//os:macos": [],
        "@platforms//os:ios": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [":scoped_typeref"],
)

chromium_cc_library(
    name = "scoped_mach_port",
    srcs = ["scoped_mach_port.cc"],
    hdrs = ["scoped_mach_port.h"],
    target_compatible_with = select({
        "@platforms//os:macos": [],
        "@platforms//os:ios": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        ":mach_logging",
        "//chromium/base:base_export",
        "//chromium/base:scoped_generic",
    ],
)

chromium_cc_library(
    name = "scoped_typeref",
    hdrs = ["scoped_typeref.h"],
    target_compatible_with = select({
        "@platforms//os:macos": [],
        "@platforms//os:ios": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//chromium/base:check_op",
        "//chromium/base/memory:scoped_policy",
    ],
)

chromium_cc_test(
    name = "scoped_cftyperef_unittest",
    size = "small",
    srcs = ["scoped_cftyperef_unittest.cc"],
    linkopts = ["-Wl,-framework,CoreFoundation"],
    target_compatible_with = select({
        "@platforms//os:macos": [],
        "@platforms//os:ios": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        ":scoped_cftyperef",
        "//chromium/base/memory:scoped_policy",
        "//chromium/testing/gtest",
    ],
)
