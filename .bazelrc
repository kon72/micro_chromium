common --experimental_ui_max_stdouterr_bytes=-1

build --enable_platform_specific_config

startup --windows_enable_symlinks
build --enable_runfiles

build --incompatible_strict_action_env
run --incompatible_strict_action_env
test --incompatible_strict_action_env

build --features=header_modules
build --features=layering_check
build --features=parse_headers
build --features=process_headers_in_dependencies
# build --repo_env=APPLE_SUPPORT_LAYERING_CHECK_BETA=1

# For googletest
build --define='absl=1'
test --test_env="GTEST_INSTALL_FAILURE_SIGNAL_HANDLER=1"

build --copt=-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE --host_copt=-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_EXTENSIVE

# Linux
build:linux --copt=-Werror --host_copt=-Werror
build:linux --conlyopt=-std=c11 --host_conlyopt=-std=c11
build:linux --cxxopt=-std=c++20 --host_cxxopt=-std=c++20
build:linux --action_env=CC=clang-20
build:linux --cxxopt=-stdlib=libc++ --host_cxxopt=-stdlib=libc++
build:linux --linkopt=-stdlib=libc++ --host_linkopt=-stdlib=libc++

# Windows
build:windows --copt=/WX --host_copt=/WX
build:windows --conlyopt=/std:c11 --host_conlyopt=/std:c11
build:windows --cxxopt=/std:c++20 --host_cxxopt=/std:c++20
build:windows --config=win_clang

# macOS
build:macos --copt=-Werror --host_copt=-Werror
build:macos --conlyopt=-std=c11 --host_conlyopt=-std=c11
build:macos --cxxopt=-std=c++20 --host_cxxopt=-std=c++20

# clang-cl
build:win_clang --extra_toolchains=@local_config_cc//:cc-toolchain-x64_windows-clang-cl
build:win_clang --extra_execution_platforms=//:x64_windows-clang-cl
build:win_clang --host_platform=//:x64_windows-clang-cl

# Sets the default Apple platform to macOS.
build --apple_platform_type=macos

# Compile ObjC++ files with C++20
build --per_file_copt=.*\.mm\$@-std=c++20

# Allow debugging with XCODE
build --apple_generate_dsym

# This bazelrc file can be used for user-specific custom build settings.
try-import %workspace%/.user.bazelrc
