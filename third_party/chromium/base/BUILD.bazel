load("@rules_cc//cc:cc_test.bzl", "cc_test")
load(
    "//third_party/chromium:build_defs.bzl",
    "chromium_cc_library",
)

chromium_cc_library(
    name = "base_export",
    hdrs = ["base_export.h"],
    visibility = ["//third_party/chromium:__subpackages__"],
)

chromium_cc_library(
    name = "bits",
    hdrs = ["bits.h"],
    visibility = ["//visibility:public"],
    deps = [":check"],
)

chromium_cc_library(
    name = "bit_cast",
    hdrs = ["bit_cast.h"],
    visibility = ["//visibility:public"],
)

chromium_cc_library(
    name = "check",
    hdrs = ["check.h"],
    visibility = ["//third_party/chromium:__subpackages__"],
    deps = ["@abseil-cpp//absl/log:absl_check"],
)

chromium_cc_library(
    name = "check_op",
    hdrs = ["check_op.h"],
    visibility = ["//third_party/chromium:__subpackages__"],
    deps = ["@abseil-cpp//absl/log:absl_check"],
)

chromium_cc_library(
    name = "compiler_specific",
    hdrs = ["compiler_specific.h"],
    visibility = ["//visibility:public"],
    deps = ["//third_party/chromium/build:build_config"],
)

chromium_cc_library(
    name = "format_macros",
    hdrs = ["format_macros.h"],
    visibility = ["//visibility:public"],
    deps = ["//third_party/chromium/build:build_config"],
)

chromium_cc_library(
    name = "logging",
    hdrs = ["logging.h"],
    visibility = ["//third_party/chromium:__subpackages__"],
    deps = ["@abseil-cpp//absl/log:absl_log"],
)

chromium_cc_library(
    name = "no_destructor",
    hdrs = ["no_destructor.h"],
    visibility = ["//visibility:public"],
)

chromium_cc_library(
    name = "scoped_clear_last_error",
    srcs = select({
        "@platforms//os:windows": ["scoped_clear_last_error_win.cc"],
        "//conditions:default": [],
    }),
    hdrs = ["scoped_clear_last_error.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":base_export",
        "//third_party/chromium/build:build_config",
    ],
)

chromium_cc_library(
    name = "scoped_generic",
    hdrs = ["scoped_generic.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":check",
        ":compiler_specific",
    ],
)

cc_test(
    name = "bit_cast_unittest",
    size = "small",
    srcs = ["bit_cast_unittest.cc"],
    deps = [
        ":bit_cast",
        "//third_party/chromium/testing/gtest",
    ],
)

cc_test(
    name = "scoped_clear_last_error_unittest",
    size = "small",
    srcs = ["scoped_clear_last_error_unittest.cc"],
    deps = [
        ":logging",
        ":scoped_clear_last_error",
        "//third_party/chromium/build:build_config",
        "//third_party/chromium/testing/gtest",
    ],
)

cc_test(
    name = "scoped_generic_unittest",
    size = "small",
    srcs = ["scoped_generic_unittest.cc"],
    deps = [
        ":scoped_generic",
        "//third_party/chromium/base/containers:contains",
        "//third_party/chromium/build:build_config",
        "//third_party/chromium/testing/gtest",
    ],
)
